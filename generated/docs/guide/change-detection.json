{"id":"guide/change-detection","title":"Angular 变更检测和运行时优化","contents":"<div class=\"content\">\n  <h1 id=\"angular-change-detection-and-runtime-optimization\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"b798rcqppzvbs7y0tutyw4slt\">Angular 变更检测和运行时优化<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/change-detection#angular-change-detection-and-runtime-optimization\"><i class=\"material-icons\">link</i></a></h1>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"e1crxd7mjvrslbjv54k89i0a4\"><strong>变更检测</strong>是 Angular 检查你的应用程序状态是否已更改以及是否需要更新任何 DOM 的过程。大体而言，Angular 会从上到下遍历你的组件，寻找更改。Angular 会定期运行其变更检测机制，以便对数据模型的更改反映在应用程序的视图中。变更检测可以手动触发，也可以通过异步事件（比如用户交互或 XHR 自动完成）来触发。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"4yflrv3fwyj5r7nhkzqp4pvrj\">变更检测具有一种高度优化的性能，但如果应用程序过于频繁的运行它，它仍然会导致变慢。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"9w1xa5wo1ldtwfbbvjvlyjrfu\">在本指南中，你将了解如何通过跳过应用程序的某些部分并仅在必要时运行变更检测来控制和优化变更检测机制。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"a3j7k7yeedmb8q15uw0fvp4on\">如果你更想了解有关媒体格式性能优化的更多信息，请观看此视频：</p>\n<div class=\"video-container\">\n<video controls>\n      <source src=\"https://videos.angular.cn/f8sA-i6gkGQ.webm\" type=\"video/webm\">\n      <source src=\"https://videos.angular.cn/f8sA-i6gkGQ.mp4\" type=\"video/mp4\">\n      <track src=\"/assets/videos/f8sA-i6gkGQ.en.vtt\" label=\"English\" kind=\"subtitles\" srclang=\"en\">\n      <track src=\"/assets/videos/f8sA-i6gkGQ.cn.vtt\" label=\"简体中文\" kind=\"subtitles\" srclang=\"zh-CN\" default>\n      <track src=\"/assets/videos/f8sA-i6gkGQ.tw.vtt\" label=\"正體中文\" kind=\"subtitles\" srclang=\"zh-TW\">\n    </video>\n</div>\n\n  <div class=\"reviewed\">最后复查时间：Wed May 04 2022</div>\n</div>\n\n\n<!-- links to this doc:\n - guide/binding-overview\n-->\n<!-- links from this doc:\n - guide/change-detection#angular-change-detection-and-runtime-optimization\n-->"}
