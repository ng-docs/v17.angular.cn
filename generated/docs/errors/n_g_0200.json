{"id":"errors/NG0200","title":"NG0200：在实例化提供者时检测到 DI 中的循环依赖","contents":"<div class=\"content\">\n\n  <h1 id=\"ng0200-circular-dependency-in-di-detected-while-instantiating-a-provider\" data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3qzvmk8919xnaqz1n712ijnxl\">NG0200：在实例化提供者时检测到 DI 中的循环依赖<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0200#ng0200-circular-dependency-in-di-detected-while-instantiating-a-provider\"><i class=\"material-icons\">link</i></a></h1>\n\n  \n  <div class=\"video-container\">\n    <video controls>\n      <source src=\"https://videos.angular.cn/CpLOm4o_FzM.webm\" type=\"video/webm\">\n      <source src=\"https://videos.angular.cn/CpLOm4o_FzM.mp4\" type=\"video/mp4\">\n      <track src=\"/assets/videos/CpLOm4o_FzM.en.vtt\" label=\"English\" kind=\"subtitles\" srclang=\"en\">\n      <track src=\"/assets/videos/CpLOm4o_FzM.cn.vtt\" label=\"简体中文\" kind=\"subtitles\" srclang=\"zh-CN\" default>\n      <track src=\"/assets/videos/CpLOm4o_FzM.tw.vtt\" label=\"正體中文\" kind=\"subtitles\" srclang=\"zh-TW\">\n    </video>\n  </div>\n  \n  \n\n  <div class=\"error-description\">\n    <h2 id=\"description\">说明<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0200#description\"><i class=\"material-icons\">link</i></a></h2>\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"syjymxs4n19t0929956u3wpv\">当某个<a href=\"guide/hierarchical-dependency-injection\">服务的依赖项</a>直接或间接依赖于此服务本身时，便存在循环依赖项。比如，如果 <code>UserService</code> 依赖于 <code>EmployeeService</code> ，而 <code>EmployeeService</code> 也依赖于 <code>UserService</code>。 Angular 将不得不先实例化 <code>EmployeeService</code> 再创建 <code>UserService</code>，而 <code>EmployeeService</code> 又依赖于 <code>UserService</code> 本身。</p>\n\n  </div>\n\n\n  \n  <br>\n\n  <div class=\"debugging\">\n    <h2 id=\"debugging-the-error\">如何排除本错误<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"errors/NG0200#debugging-the-error\"><i class=\"material-icons\">link</i></a></h2>\n    <p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"cju9fnfd03d98mb9jdo5j1byh\">使用调用栈来确定循环依赖项存在的位置。通过<a href=\"guide/dependency-injection-in-action\">源码映射</a>找出组件、模块或服务的依赖项，并找出导致此问题的循环，就能查看是否有任何子依赖项依赖于原始文件。</p>\n<p data-ng_translator_product=\"100\" data-ng_translator_ref_id=\"3ta0mi4vwxjwpifqretrpc18m\">打破依赖关系的这种循环以解决此错误。这通常意味着删除或重构依赖项以使其彼此不互相依赖。</p>\n<!-- links -->\n<!-- external links -->\n<!-- end links -->\n\n  </div>\n  \n</div>\n\n<!-- links to this doc:\n - errors\n-->\n<!-- links from this doc:\n - errors/NG0200#debugging-the-error\n - errors/NG0200#description\n - errors/NG0200#ng0200-circular-dependency-in-di-detected-while-instantiating-a-provider\n - guide/dependency-injection-in-action\n - guide/hierarchical-dependency-injection\n-->"}
